<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: three.js | Learning Three.js]]></title>
  <link href="http://learningthreejs.com/blog/categories/three-dot-js/atom.xml" rel="self"/>
  <link href="http://learningthreejs.com/"/>
  <updated>2014-05-07T15:54:50+02:00</updated>
  <id>http://learningthreejs.com/</id>
  <author>
    <name><![CDATA[Jerome Etienne]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Funky Deformation For The Geometry of Your Three.js Game With threex.vertexanimation]]></title>
    <link href="http://learningthreejs.com/blog/2014/05/07/funky-deformation-for-the-geometry-of-your-three-dot-js-game-with-threex-dot-vertexanimation/"/>
    <updated>2014-05-07T20:20:00+02:00</updated>
    <id>http://learningthreejs.com/blog/2014/05/07/funky-deformation-for-the-geometry-of-your-three-dot-js-game-with-threex-dot-vertexanimation</id>
    <content type="html"><![CDATA[<p><a href='http://jeromeetienne.github.io/threex.vertexanimation/examples/demo.html' target='_blank'><img class="right" src="https://raw.githubusercontent.com/jeromeetienne/threex.vertexanimation/master/examples/images/screenshot-threex-vertexanimation-512x512.jpg" width="250" height="250"></a>
This is post is part of the <a href="/blog/2014/04/22/one-threex-a-day-gets-your-game-on-its-way-a-challenge/">'one threex a day' challenge</a>.
This challenge is to publish every day one game extension for three.js!
One per day, every day and that for 2month!
In this post, we gonna talk about
<a href="http://www.threejsgames.com/extensions/#threex.vertexanimation">threex.vertexanimation</a>.
threex.vertexanimation is a <a href="http://www.threejsgames.com/extensions/">three.js games extension</a> which provides easy vertex animation. You can see your object move as if it's got a life of its own! You can use it to make the objects in your game bounce, dance or move in funky ways. You can add it in your games to get a <a href="http://en.wikipedia.org/wiki/Flubber_(film)">Flubber</a> effect. The best part about it is that you can get creative. You can morph or deform your objects to transform them into other objects. It is really fun to experiment with!</p>

<p><a href='http://jeromeetienne.github.io/threex.vertexanimation/examples/demo.html' target='_blank'><input type="button" value='Try Threex.vertexanimation Demo Now' /></a></p>

<p>To see the <a href="/blog/categories/threexaday/">other posts about one threex a day</a> and forget our moto!
<strong>"A THREEx extension a day, gets your game on its way!"</strong></p>

<!-- more -->




<iframe width="420" height="315" src="http://learningthreejs.com//www.youtube.com/embed/FjsMzOI3eRw" frameborder="0" allowfullscreen></iframe>


<h1>Show Don't Tell</h1>

<ul>
<li><a href="http://jeromeetienne.github.io/threex.vertexanimation/examples/basic.html">examples/basic.html</a>
[<a href="https://github.com/jeromeetienne/threex.vertexanimation/blob/master/examples/basic.html">view source</a>] :
It shows a basic usage of the module.</li>
<li><a href="http://jeromeetienne.github.io/threex.vertexanimation/examples/demo.html">examples/demo.html</a>
[<a href="https://github.com/jeromeetienne/threex.vertexanimation/blob/master/examples/demo.html">view source</a>] :
It simply add a more shiny example using reflexion and environment map.</li>
</ul>


<h1>How To Install It</h1>

<p>You can install it via script tag</p>

<p>```html</p>

<script src='threex.vertexanimation.js'></script>


<p>```</p>

<p>Or you can install with <a href="http://bower.io/">bower</a>, as you wish.</p>

<p><code>bash
bower install threex.vertexanimation
</code></p>

<h1>How To Use It</h1>

<p>Here is a typical usage</p>

<p>```javascript
// instanciate the animation object
var animation   = new THREEx.VertexAnimation(geometry, function(origin, position, delta, now){</p>

<pre><code>// here you put your formula, something clever which fit your needs
var angle   = now*2 + position.y     * 10;
position.x  = origin.x + Math.cos(angle)*0.1;   
</code></pre>

<p>})
// update the animation at every frame
updateFcts.push(function(delta, now){</p>

<pre><code>animation.update(delta, now)
</code></pre>

<p>})
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Three.js Interview: Online 3D Modeling And Rendering With Clara.io]]></title>
    <link href="http://learningthreejs.com/blog/2014/05/07/threejs-interview-online-3d-modeling-and-rendering-with-claraio/"/>
    <updated>2014-05-07T10:16:00+02:00</updated>
    <id>http://learningthreejs.com/blog/2014/05/07/threejs-interview-online-3d-modeling-and-rendering-with-claraio</id>
    <content type="html"><![CDATA[<p><img class="right" src="/data/2014-05-07-threejs-interview-online-3d-modeling-and-rendering-with-claraio/images/image01.jpg" width="235" height="105"></p>

<p>Hello everybody! This is my first <em>Three.js Interview</em> video. The inspiration came from all those great people out there doing <a href="http://threejs.org">very cool projects with three.js</a>. I want to share their innovations with others. If you know me, you know that I love talking about three.js. So, I would like everybody to have the opportunity to enjoy and learn from these <a href="/blog/categories/threejsInterview/">three.js interviews</a>. So three.js interviews are videos of around one hour where people are talking about cool things they do with three.js . Maybe you could get some ideas for your own project or simply partake on a subject you're passionate about.</p>

<p><a href='https://news.ycombinator.com/item?id=7709928' target='_blank'><input type="button" value='discuss it on hacker news' /></a></p>

<p><img class="left" src="/data/2014-05-07-threejs-interview-online-3d-modeling-and-rendering-with-claraio/images/image03.jpg" width="320" height="240"></p>

<p>The idea is to have interesting people come and talk about cool things that they've done with three.js. Like <a href="https://twitter.com/BenAtExocortex">Ben Houston</a>, who is our guest in this first video. Ben is the Team Leader for <a href="http://clara.io/">Clara.io</a>, a online 3D modeling and rendering tool that you can use inside you browser. Ben talks to us about the creation and the evolution of <a href="http://clara.io/">Clara.io</a> and about all the interesting features it's got!</p>

<p>I hope you enjoy it and stay tuned for the next Three.js Interview :)</p>

<iframe width="420" height="315" src="http://learningthreejs.com//www.youtube.com/embed/5pdxh9pjKzQ" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scary Monster For Your Next FPS Game in Three.js With threex.md2character]]></title>
    <link href="http://learningthreejs.com/blog/2014/05/06/scary-monster-for-your-next-fps-game-in-three-dot-js-with-threex-dot-md2character/"/>
    <updated>2014-05-06T20:19:00+02:00</updated>
    <id>http://learningthreejs.com/blog/2014/05/06/scary-monster-for-your-next-fps-game-in-three-dot-js-with-threex-dot-md2character</id>
    <content type="html"><![CDATA[<p><a href='http://jeromeetienne.github.io/threex.md2character/examples/select.html' target='_blank'><img class="right" src="https://raw.githubusercontent.com/jeromeetienne/threex.md2character/master/examples/images/screenshot-threex-md2character-512x512.jpg" width="250" height="250"></a>
This is post is part of the <a href="/blog/2014/04/22/one-threex-a-day-gets-your-game-on-its-way-a-challenge/">'one threex a day' challenge</a>.
This challenge is to publish every day one game extension for three.js!
One per day, every day and that for 2month!
In this post, we gonna talk about
<a href="http://www.threejsgames.com/extensions/#threex.md2character">threex.md2character</a>.
threex.md2character is a
<a href="http://www.threejsgames.com/extensions/">three.js game extension</a>
which provides a model of a monster.
His name is 'ratmahatta' and is from quake era.
It is animated, can hold a weapon, skin may be changed. Pretty sweet.
you got <strong>12 weapons to choose from</strong>, <strong>5 different skins</strong> and <strong>16 distinct animations</strong>. Pretty complete!
It is easy to include in your game, maybe in a cave or a dungeon :)
It is from
<a href="http://threejs.org/examples/webgl_morphtargets_md2.html">webgl_morphtargets_md2.html three.js example</a>.
The model is make by
<a href="http://planetquake.gamespy.com/View.php?view=Quake2.Detail&amp;id=368">Brian Collins</a> and converted by
<a href="https://twitter.com/#!/oosmoxiecode">@oosmoxiecode</a>'s
<a href="http://oos.moxiecode.com/blog/2012/01/md2-to-json-converter/">MD2 converter</a>.</p>

<p><a href='http://jeromeetienne.github.io/threex.md2character/examples/select.html' target='_blank'><input type="button" value='Try Threex.md2character Demo Now' /></a></p>

<p>To see the <a href="/blog/categories/threexaday/">other posts about one threex a day</a> and forget our moto!
<strong>"A THREEx extension a day, gets your game on its way!"</strong></p>

<!-- more -->




<iframe width="420" height="315" src="http://learningthreejs.com//www.youtube.com/embed/zOqxsorcyQk" frameborder="0" allowfullscreen></iframe>


<h1>Show Don't Tell</h1>

<ul>
<li><a href="http://jeromeetienne.github.io/threex.md2character/examples/select.html">examples/select.html</a>
[<a href="https://github.com/jeromeetienne/threex.md2character/blob/master/examples/select.html">view source</a>] :
It shows all the possibilities for the skins, the weapons and the animations.</li>
<li><a href="http://jeromeetienne.github.io/threex.md2character/examples/ratmahattaplayer.html">examples/ratmahattaplayer.html</a>
[<a href="https://github.com/jeromeetienne/threex.md2character/blob/master/examples/ratmahattaplayer.html">view source</a>] :
It shows how to controls the mesh as if it was a player in a game with input
in the keyboard wasd or arrows keys.</li>
</ul>


<h1>How To Install It</h1>

<p>You can install it via script tag</p>

<p>```html</p>

<script src='threex.md2character.js'></script>


<p>```</p>

<p>Or you can install with <a href="http://bower.io/">bower</a>, as you wish.</p>

<p><code>bash
bower install threex.md2character
</code></p>

<h1>How To Use It</h1>

<h2>threex.md2characterratmahatta.js</h2>

<p>You typically create a ratamahatta like this</p>

<p><code>
var ratamahatta = new THREEx.MD2CharacterRatmahatta()
scene.add(ratamahatta.character.object3d)
</code></p>

<p>Don't forget to update it when you render with <code>ratamahatta.update(delta)</code>.Internally, it create a character and a controls. You can use them directly.
* <code>ratamahatta.character</code> instance of <code>THREEx.MD2Character</code>
* <code>ratamahatta.controls</code> instance of <code>THREEx.MD2CharacterControls</code></p>

<p>It has simple functions to set the skin, weapon and animations.</p>

<ul>
<li><code>ratamahatta.skinNames</code> is the names of available skins. It has 5 different skins <code>["ratamahatta", "ctf_b", "ctf_r", "dead", "gearwhore"]</code></li>
<li><code>ratamahatta.setSkinName(skinName)</code> set the skin based on its name</li>
<li><code>ratamahatta.weaponsNames</code> is the names of available weapons. It has 12 animation <code>["none", "weapon", "w_bfg", "w_blaster", "w_chaingun", "w_glauncher", "w_hyperblaster", "w_machinegun", "w_railgun", "w_rlauncher", "w_shotgun", "w_sshotgun"]</code></li>
<li><code>ratamahatta.setWeaponName(weaponName)</code> set the weapon based on its name</li>
<li><code>ratamahatta.animationNames</code> is the names of available animation. It has 16 animations <code>["stand", "run", "attack", "pain", "jump", "flip", "salute", "taunt", "wave", "point", "crstand", "crwalk", "crattack", "crpain", "crdeath", "death"]</code></li>
<li><code>ratamahatta.setAnimationName(animationName)</code> set the animation based on its name</li>
</ul>


<h2>threex.md2charactercontrols.js</h2>

<p>First you create controls for your character like this</p>

<p><code>
var controls    = new THREEx.MD2CharacterControls(character.object3d)
</code></p>

<p>Dont forget to update it when you render with <code>controls.update(delta, now)</code>. The character is controlled by <code>controls.inputs</code> properties. You just have to set them to fit your need.</p>

<ul>
<li><code>control.inputs.right</code> is true if the character must go right</li>
<li><code>control.inputs.left</code> is true if the character must go left</li>
<li><code>control.inputs.up</code> is true if the character must go forward</li>
<li><code>control.inputs.down</code> is true if the character must go backward</li>
</ul>


<h2>threex.md2character.js</h2>

<p>It provide the base to play with the model.
It is a modified version of
<a href="https://github.com/mrdoob/three.js/blob/master/examples/js/MD2Character.js">MD2Character.js</a>
from this <a href="http://threejs.org/examples/webgl_morphtargets_md2.html">webgl_morphtargets_md2.html three.js example</a>.</p>

<p>First you create it.
<code>
var character   = new THREEx.MD2Character()
</code></p>

<p>Dont forget to update it at every frame with a <code>character.update(delta)</code></p>

<ul>
<li><code>character.object3d</code> is the THREE.Object3D container</li>
<li><code>character.setWireframe(boolean)</code> set the model in wireframe.</li>
<li><code>character.setWeapon(weaponIndex)</code> add a weapon in the character hand. <code>weaponIndex</code> is between 0 and 11. if -1, it removes the weapon.</li>
<li><code>character.setSkin(skinIndex)</code> set the skin of the character. <code>skinIndex</code> is between 0 and 4</li>
<li><code>character.setAnimation(animationName)</code> set the animation for the character. The name is one of <code>["stand", "run", "attack", "pain", "jump", "flip", "salute", "taunt", "wave", "point", "crstand", "crwalk", "crattack", "crpain", "crdeath", "death"]</code>.</li>
<li><code>character.setPlaybackRate(rate)</code> set the playback rate of the animation.</li>
<li><code>character.load(config)</code> loads the characters

<ul>
<li><code>character.addEventListener('loaded', function(){})</code> to be notified when the model is loaded</li>
<li><code>character.isLoaded()</code> is true if the model is loaded, false otherwise</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simple And Efficient 3 Point Lighting To Get Your Game Started With Threex.basiclighting Game Extension For Three.js]]></title>
    <link href="http://learningthreejs.com/blog/2014/05/05/simple-and-efficient-3-point-lighting-to-get-your-game-started-with-threex-dot-basiclighting-game-extension-for-three-dot-js/"/>
    <updated>2014-05-05T13:52:00+02:00</updated>
    <id>http://learningthreejs.com/blog/2014/05/05/simple-and-efficient-3-point-lighting-to-get-your-game-started-with-threex-dot-basiclighting-game-extension-for-three-dot-js</id>
    <content type="html"><![CDATA[<p><a href='http://jeromeetienne.github.io/threex.basiclighting/examples/demo.html' target='_blank'><img class="right" src="https://raw.githubusercontent.com/jeromeetienne/threex.basiclighting/master/examples/images/screenshot-threex-basiclighting-512x512.jpg" width="250" height="250"></a>
This is post is part of the <a href="/blog/2014/04/22/one-threex-a-day-gets-your-game-on-its-way-a-challenge/">'one threex a day' challenge</a>.
This challenge is to publish every day one game extension for three.js!
One per day, every day and that for 2month!
In this post, we gonna talk about
<a href="http://www.threejsgames.com/extensions/#threex.basiclighting">threex.basiclighting</a>.
threex.basiclighting is a <a href="http://www.threejsgames.com/extensions/">threex game extension for three.js</a>. It provides
a <a href="http://en.wikipedia.org/wiki/Three-point_lighting">three point lighting</a>.
It is the lighting used in movies:
A key light on the front-left, a back light in the back and a fill light on the front right, nothing fancy.
It is perfect if you dunno much about lighting and you want to add lights in your games.
Nothing big or special in this extension.
This is mainly for educational purposes or for starting your project fast.</p>

<p><a href='http://jeromeetienne.github.io/threex.basiclighting/examples/demo.html' target='_blank'><input type="button" value='Try Threex.basiclighting Demo Now' /></a></p>

<p>To see the <a href="/blog/categories/threexaday/">other posts about one threex a day</a> and forget our moto!
<strong>"A THREEx extension a day, gets your game on its way!"</strong></p>

<!-- more -->




<iframe width="420" height="315" src="http://learningthreejs.com//www.youtube.com/embed/eZkl-r-UOsg" frameborder="0" allowfullscreen></iframe>


<h1>Show Don't Tell</h1>

<ul>
<li><a href="http://jeromeetienne.github.io/threex.basiclighting/examples/basic.html">examples/basic.html</a>
[<a href="https://github.com/jeromeetienne/threex.basiclighting/blob/master/examples/basic.html">view source</a>] :
It shows a basic example of extension.</li>
<li><a href="http://jeromeetienne.github.io/threex.basiclighting/examples/demo.html">examples/demo.html</a>
[<a href="https://github.com/jeromeetienne/threex.basiclighting/blob/master/examples/demo.html">view source</a>] :
It shows a demo of it.</li>
</ul>


<h1>How To Install It</h1>

<p>You can install it manually. Just do</p>

<p>```html</p>

<script src='threex.basiclighting.js'></script>


<p>```</p>

<p>You can install with <a href="http://bower.io/">bower</a>.</p>

<p><code>bash
bower install threex.basiclighting
</code></p>

<p>then you add that in your html</p>

<p>```html</p>

<script src="bower_components/threex.basiclighting/threex.basiclighting.js"></script>


<p>```</p>

<h2>How to Use It</h2>

<p>create a three point lighting</p>

<p><code>javascript
var lighting    = new THREEx.ThreePointsLighting()
scene.add(lighting)
</code></p>

<p>create a sun set lighting</p>

<p><code>javascript
var lighting    = new THREEx.SunSetLighting()
scene.add(lighting)
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Easy to use dynamic texture to write text in your 3d object with threex.dynamictexture game extensions for three.js]]></title>
    <link href="http://learningthreejs.com/blog/2014/05/02/easy-to-use-dynamic-texture-to-write-text-in-your-3d-object-with-threex-dot-dynamictexture-game-extensions-for-three-dot-js/"/>
    <updated>2014-05-02T13:54:00+02:00</updated>
    <id>http://learningthreejs.com/blog/2014/05/02/easy-to-use-dynamic-texture-to-write-text-in-your-3d-object-with-threex-dot-dynamictexture-game-extensions-for-three-dot-js</id>
    <content type="html"><![CDATA[<p><a href='http://jeromeetienne.github.io/threex.dynamictexture/examples/basic.html' target='_blank'><img class="right" src="https://raw.githubusercontent.com/jeromeetienne/threex.dynamictexture/master/examples/images/screenshot-threex-dynamictexture-512x512.jpg" width="250" height="250"></a>
This is post is part of the <a href="/blog/2014/04/22/one-threex-a-day-gets-your-game-on-its-way-a-challenge/">'one threex a day' challenge</a>.
This challenge is to publish every day one game extension for three.js!
One per day, every day and that for 2month!
In this post, we gonna talk about
<a href="http://www.threejsgames.com/extensions/#threex.dynamictexture">threex.dynamictexture</a>.
threex.dynamictexture is a <a href="http://www.threejsgames.com/extensions/">threex game extension for three.js</a>. It provides an easy way to handle dynamically generated texture.
Inspiration came from
the excelent <a href="http://www.babylonjs.com">babylon.js</a>
which got
<a href="https://github.com/BabylonJS/Babylon.js/blob/master/Babylon/Materials/textures/babylon.dynamicTexture.js">BABYLON.DynamicTexture</a>.
It is mainly used to write text in texture. Say you got a character which says something, you may want to put that in a texture and display that above your character. threex.dynamictexture will make it easy for you.</p>

<p><a href='http://jeromeetienne.github.io/threex.dynamictexture/examples/basic.html' target='_blank'><input type="button" value='Try Threex.dynamictexture Demo Now' /></a></p>

<p>To see the <a href="/blog/categories/threexaday/">other posts about one threex a day</a> and forget our moto!
<strong>"A THREEx extension a day, gets your game on its way!"</strong></p>

<!-- more -->




<iframe width="420" height="315" src="http://learningthreejs.com//www.youtube.com/embed/lSR-6Q4oinU" frameborder="0" allowfullscreen></iframe>


<h1>Show Don't Tell</h1>

<ul>
<li><a href="http://jeromeetienne.github.io/threex.dynamictexture/examples/basic.html">examples/basic.html</a>
[<a href="https://github.com/jeromeetienne/threex.dynamictexture/blob/master/examples/basic.html">view source</a>] :
It shows this feature, and that one which is coded like that.</li>
</ul>


<h1>How To Install It</h1>

<p>You can install it manually or with
<a href="http://bower.io/">bower</a>.
for the manual version, first include <code>threex.dynamictexture.js</code> with the usual</p>

<p>```html</p>

<script src='threex.dynamictexture.js'></script>


<p>```</p>

<p>or with
<a href="http://bower.io/">bower</a>
you type the following to install the package.</p>

<p><code>bash
bower install threex.dynamictexture
</code></p>

<p>then you add that in your html</p>

<p>```html</p>

<script src="bower_components/threex.dynamictexture/threex.dynamictexture.js"></script>


<p>```</p>

<h1>How To Use It ? </h1>

<p>You instanciate the texture, say it is 512 pixel width, and 512 pixel high.
<code>
var dynamicTexture  = new THREEx.DynamicTexture(512,512)
</code></p>

<ul>
<li><code>dynamicTexture.canvas</code> the underlying canvas</li>
<li><code>dynamicTexture.context</code> the context of the underlying canvas</li>
<li><code>dynamicTexture.texture</code> the <code>THREE.Texture</code> created</li>
</ul>


<p>To use the texture on a <code>THREE.Material</code></p>

<p>```javascript
var geometry    = new THREE.CubeGeometry( 1, 1, 1);
var material    = new THREE.MeshBasicMaterial({</p>

<pre><code>map : dynamicTexture.texture
</code></pre>

<p>})
var mesh    = new THREE.Mesh( geometry, material );
scene.add( mesh );
```</p>

<p>When you update a texture be sure to do</p>

<p><code>javascript
dynamicTexture.texture.needsUpdate  = true
</code></p>

<h2>Helpers Functions</h2>

<p>Some helpers functions are provided to draw in this canvas.</p>

<p><strong>To clear the underlying canvas</strong></p>

<p><code>
dynamicTexture.clear();
</code></p>

<p><strong>To Draw a Text</strong>
to draw a text</p>

<p><code>
dynamicTexture.drawText('Hello', 32, 256, 'red')
</code></p>
]]></content>
  </entry>
  
</feed>

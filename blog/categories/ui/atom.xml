<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ui | Learning Three.js]]></title>
  <link href="http://learningthreejs.com/blog/categories/ui/atom.xml" rel="self"/>
  <link href="http://learningthreejs.com/"/>
  <updated>2015-09-01T20:07:22+01:00</updated>
  <id>http://learningthreejs.com/</id>
  <author>
    <name><![CDATA[Jerome Etienne]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[dat-gui - Simple UI for Demos]]></title>
    <link href="http://learningthreejs.com/blog/2011/08/14/dat-gui-simple-ui-for-demos/"/>
    <updated>2011-08-14T19:42:00+01:00</updated>
    <id>http://learningthreejs.com/blog/2011/08/14/dat-gui-simple-ui-for-demos</id>
    <content type="html"><![CDATA[<p><a href="http://code.google.com/p/dat-gui/">Dat.gui</a>
is a GUI widget for your demos. It provide way for the user to set parameters of the
demo to play with it. It is simple to code, yet cool and minimalist on the screen.
It is the blue vuemeters on the screenshot below. This post is a presentation of
the library.</p>

<p><img class="right" src="/data/dat_gui_simple_ui_for_demos/datgui_integrated.png" title="Integrated" ></p>

<h2>How to include it</h2>

<p>Simply include the library file in your page. Download it <a href="http://code.google.com/p/dat-gui">there</a></p>

<p>``` html</p>

<pre><code>&lt;script type='text/javascript' src='DAT.GUI.min.js'&gt;&lt;/script&gt;
</code></pre>

<p>```</p>

<!--more-->


<h2>How to use it</h2>

<p>First initialize the object itself. It will create the widget and display it on the
screen top right corner. You can change this position if you wish (see <code>autoplace</code>)
<img class="right" src="/data/dat_gui_simple_ui_for_demos/datgui_closeup.png" title="Close up" ></p>

<p>``` javascript</p>

<pre><code>var gui = new DAT.GUI({
    height : 5 * 32 - 1
});
</code></pre>

<p>```</p>

<p>Here is the visual result on the right.
The misterious <code>height</code>parameter is the height of the widget. You have to set it manually.
In our case, we get 5 lines plus the close button.
The formula which worked for me has been <code>nline * 32 - 1</code>.</p>

<h2>Lets configure it and add some variables</h2>

<p>First we need to store the values of the variables, lets call that <code>params</code>. It may be <code>this</code> too, it depends
of your personal style of code.</p>

<p>``` javascript</p>

<pre><code>var params = {
    interation: 5000
};
</code></pre>

<p>```</p>

<p>Let add a variable name <code>interation</code> to the widget.</p>

<p>``` javascript</p>

<pre><code>gui.add(params, 'interation')
</code></pre>

<p>```</p>

<p>It will add a line in the GUI widget.
<em>dat.gui</em> will see <code>params.iteration</code> is a Number and thus <em>guess</em> you want to display a slider for it.
If it is a function, it will be interpreted as a button and call params.foobar() on click.
If the user changes the value with the mouse, the value of <code>params.iteration</code>
will be changed accordingly. Up to you to know what to do with it.</p>

<h2>Lets Custom it Some More</h2>

<p>You may be easy be notified of user changes with callbacks.  <code>onFinishChange</code> is triggered once the value is changed.</p>

<p>``` javascript</p>

<pre><code>gui.add(params, 'interation').onFinishChange(function(){
    // refresh based on the new value of params.interation
})
</code></pre>

<p>```</p>

<p>You can customize further if needed. To change the label displayed on the variable line, use <code>.name("better label")</code></p>

<p>``` javascript</p>

<pre><code>gui.add(params, 'interation').name('Intertions')
</code></pre>

<p>```</p>

<p>You can set up min/max limits and steps. This one will allows values from
128 to 256, only if they are multiple of 16</p>

<p>``` javascript</p>

<pre><code>gui.add(params, 'width').min(128).max(256).step(16)
</code></pre>

<p>```</p>

<h2>Conclusion</h2>

<p>I hope this introduction got you excited about DAT.GUI. I find nice for simple demos parameters, simple to code and good
looking on the screen at that. For more informations and authoritative
answer, <a href="http://code.google.com/p/dat-gui/">see details</a> here.</p>
]]></content>
  </entry>
  
</feed>

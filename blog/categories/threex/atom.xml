<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: threex | Learning Three.js]]></title>
  <link href="http://learningthreejs.com/blog/categories/threex/atom.xml" rel="self"/>
  <link href="http://learningthreejs.com/"/>
  <updated>2015-08-07T19:18:34+01:00</updated>
  <id>http://learningthreejs.com/</id>
  <author>
    <name><![CDATA[Jerome Etienne]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Hatsune Miku Dancing In Augmented Reality]]></title>
    <link href="http://learningthreejs.com/blog/2015/07/16/hatsune-miku-dancing-in-augmented-reality/"/>
    <updated>2015-07-16T08:47:00+01:00</updated>
    <id>http://learningthreejs.com/blog/2015/07/16/hatsune-miku-dancing-in-augmented-reality</id>
    <content type="html"><![CDATA[<p>This demo shows Hatsune Miku dancing in augmented reality within
your browser! This is great and surprisingly easy to do.
All that running on your browser, based on web standards.
I did it to show it was possible to do AR within the browser. I wanted to share the code to see what you guys can do with it.</p>

<p><img class="right" src="http://learningthreejs.com/data/2015-07-16-hatsune-miku-dancing-in-augmented-reality/screenshots/screenshot-nexus9.png" width="350"></p>

<p>Best of all, it even runs on mobile phones that
support WebGL and WebRTC.
The screenshot on the right is made on a nexus.
So we can do augmented reality within the browser on mobile</p>

<blockquote><p>We can do augmented reality within the browser on currently deployed mobile phones today!
There is nothing to wait for.</p></blockquote>

<iframe src="https://vine.co/v/eApD5rPtKxT/embed/simple" width="600" height="600" frameborder="0"></iframe>


<script src="https://platform.vine.co/static/scripts/embed.js"></script>


<h2>How is it coded ?</h2>

<p>It is mainly a link of 2 parts.
First <a href="https://github.com/jeromeetienne/threex.webar">webar extensions</a>
for three.js. They bundle what is needed to handle augmented reality with three.js, from the webcam setup to the marker localisation.
Second part is the <a href="http://takahirox.github.io/three.js/examples/#webgl_loader_mmd">mmd loader</a> which loads the model. It loads the Hatsune Miku model and its animations.</p>

<p>Once you got those 2 parts, things are simple :) you just have to display your model where your marker is.
To know the tech details, you will have to dig in <a href="http://takahirox.github.io/three.js/examples/#webgl_loader_mmd">the</a>
<a href="https://github.com/jeromeetienne/threex.webar">code</a>.
I will likely talk more about AR tho.</p>

<h2>Now Let's Do a Bit of History</h2>

<p>I did this to show it was possible to do AR within the browser and to share the code to see what you guys can do with it.
It was for a <a href="http://daqri.com/dublinhacks/">AR oriented hackathon</a> in Dublin.
It recently landed a <a href="https://twitter.com/jerome_etienne/status/572435641079877632">new job</a> at <a href="http://daqri.com">Daqri</a>. Part of my job is developer relations, so I get to help people doing AR. I love it :)</p>

<p>All the code to handle Hatsune Miku is from
<a href="https://www.linkedin.com/pub/takahiro-aoyagi/96/10a/41a">Takahiro Aoyagi</a>.
He did a <a href="http://github.io/takahirox/three.js">fork on three.js</a> to load mmd formats, the format used to store Hatsune Miku.
It may be included in three.js soon.
Here is his <a href="http://takahirox.github.io/three.js/examples/#webgl_loader_mmd">example for three.js</a>
It all started with his <a href="http://takahirox.github.io/mmd-viewer-js/">mmd viewer</a> in pure webgl.
The original contains a LOT of neat features like inverse kinetic, physics for the hair,
a toon shader to make the color more cartoonish, a edge shader to enhance the outline of the model
like a drawing.
He is doing excellent work. Check him out on twitter as <a href="https://twitter.com/superhoge">@superhoge</a>.</p>

<p>Let's have a word about <a href="https://en.wikipedia.org/wiki/Hatsune_Miku">Hatsune Miku</a> herself.
It is such a nice story.
She is a Japanese star but she is purely virtual.
She is a humanoid persona which appears as a drawing or as a hologram.
There is no human behind, even for the voice!
When she sings, what you hear is a voice synthesizer from <a href="https://en.wikipedia.org/wiki/Crypton_Future_Media">crypton</a>
All that is crazy but true :)</p>

<p>She even does <a href="https://www.youtube.com/watch?v=pEaBqiLeCu0">concerts</a> where thousand of fans are go to see her.
Actual human fans I mean, not virtual ones.
As you can see, Hatsune Miku is no stranger to augmented reality.
I love her!</p>

<iframe width="420" height="315" src="http://learningthreejs.com//www.youtube.com/embed/pEaBqiLeCu0" frameborder="0" allowfullscreen></iframe>


<h2>How To Run The Demo ?</h2>

<p>You may want to run this demo obviously.
Here is how to do it.
First you put the <a href="http://jeromeetienne.github.io/demo.hatsunemiku-augmentedreality">demo url</a> in your browser.
It will read your webcam using <a href="https://developer.mozilla.org/en-US/docs/Web/API/Navigator/getUserMedia">getUserMedia</a>. When it asks for permission, allow it :)
Then you need to put this <a href="http://jeromeetienne.github.io/demo.hatsunemiku-augmentedreality/marker/image-marker-265.html">AR marker</a> in front of the camera.
You can print it and point the camera toward the paper
or you can load the marker web page and put the phone in front of the camera.
And now you can see Hatsune Mike Dancing in Augmented Reality.</p>

<p>Now let's look at it in action in this little screencast.</p>

<iframe width="420" height="315" src="http://learningthreejs.com//www.youtube.com/embed/ObVR2mOM-3Y" frameborder="0" allowfullscreen></iframe>


<h2>Conclusion</h2>

<p>If you want to experiment with augmented reality and three.js, checkout <a href="https://github.com/jeromeetienne/threex.webar">threex.webar</a>.
It is so cool to make augmented reality on the web!
I hope you have as much fun as I had doing it :)
I can't wait to see what augmented reality will do on mobile's browsers.</p>

<p>That's all folks. Have fun.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[One Threex a Day Challenge: Phase 1 Completed!]]></title>
    <link href="http://learningthreejs.com/blog/2014/05/26/one-threex-a-day-challenge-phase-1-completed/"/>
    <updated>2014-05-26T11:49:00+01:00</updated>
    <id>http://learningthreejs.com/blog/2014/05/26/one-threex-a-day-challenge-phase-1-completed</id>
    <content type="html"><![CDATA[<p>Hello everybody!</p>

<p>It's been nearly a month since I started publishing <a href="/blog/2014/04/22/one-threex-a-day-gets-your-game-on-its-way-a-challenge/">"One threex a day" challenge</a>. The idea was to share with you the many <a href="http://www.threejsgames.com/extensions/">three.js games extensions</a> that I had written over time. I wanted to show you how they could be useful, fun and easy to include in your very own three.js game. I came up with a motto "One threex a day gets your game on its way". I was all set up and ready to go. This was a challenge inspired by John Resig's article called <a href="http://ejohn.org/blo!/write-code-every-day/">"Write code everyday"</a>. I deeply agree with his theory for making progress, increasing productivity and getting the work done. I wished to try something similar on myself.</p>

<p>Let me tell you though... it WAS challenging! Keeping the publication rhythm was hard. It takes a lot of discipline and organization to get it done everyday. I had the best intentions, but unfortunately I got sick and I felt bad for most of last week. Additionally I had some day work on the side that I needed to get done. At this rate of publication, it was very hard to keep up! At first I wanted to publish the threex extensions for a period of two months but I think it is best to rest for a while. So a week ago I published the last three.js game extension of phase 1.</p>

<!-- more -->




<iframe width="420" height="315" src="http://learningthreejs.com//www.youtube.com/embed/p7xM5X7dkeI" frameborder="0" allowfullscreen></iframe>


<p>The good news is that I've had a very interesting experience. I'm pleased with the results. Obviously, some posts got more attention than others. I think this was because the three.js game extensions I published weren't all for hard-core developers or game creators. Some were pretty basic, but still had educational value for people just starting with three.js. I wanted them to be directed to all kinds of audience, amateurs and experts alike. I really appreciated the process of sharing these extensions, and overall I had a great response. I got some <a href="https://plus.google.com/104300307601542851567/posts/RhabZY19TSq">very</a> <a href="https://plus.google.com/104300307601542851567/posts/RqDbZNeJEkW">cool</a> <a href="https://twitter.com/siggraph/status/464238273582211072">retweets</a> and a lot of positive echo from you guys. Thanks a lot! Don't hesitate to contact me and give me some more feedback.</p>

<p>I stopped publication last week, but wait...I'm not saying I'm giving up though. Far from it. I have promised myself, and I promise my readers, to come back with more three.js extensions. Especially, because I still have a lot to publish, there are still some tricks up my sleeve ;)  For the moment I will concentrate on regaining my strength, writing more code and documenting it for the next threex batch. I hope to deliver and publish it soon.</p>

<p>Stay tuned! I'll be back.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Personalized and Polished Text for Your Three.js Game With threex.text]]></title>
    <link href="http://learningthreejs.com/blog/2014/05/16/personalized-and-polished-text-for-your-three-dot-js-game-with-threex-dot-text/"/>
    <updated>2014-05-16T17:55:00+01:00</updated>
    <id>http://learningthreejs.com/blog/2014/05/16/personalized-and-polished-text-for-your-three-dot-js-game-with-threex-dot-text</id>
    <content type="html"><![CDATA[<p><a href='http://jeromeetienne.github.io/threex.text/examples/basic.html' target='_blank'><img class="right" src="https://raw.githubusercontent.com/jeromeetienne/threex.text/master/examples/images/screenshot-threex-text-512x512.jpg" width="250" height="250"></a>
This is post is part of the <a href="/blog/2014/04/22/one-threex-a-day-gets-your-game-on-its-way-a-challenge/">'one threex a day' challenge</a>.
This challenge is to publish every day one game extension for three.js!
One per day, every day and that for 2month!
In this post, we gonna talk about
<a href="http://www.threejsgames.com/extensions/#threex.text">threex.text</a>.
threex.text is a <a href="http://jeromeetienne.github.io/threex/">threex game extension for three.js</a> which makes it easy to add 3d text in your game. You can use it to create a big logo on top of a shop or a big sign of any kind Las Vegas style. Up to you to see :) It is very flexible. You can fine tune lots of parameters to make it fit your needs. You can choose the fonts, the size, the bevel, the weight etc...</p>

<p><a href='http://jeromeetienne.github.io/threex.text/examples/basic.html' target='_blank'><input type="button" value='Try Threex.text Demo Now' /></a></p>

<p>To see the <a href="/blog/categories/threexaday/">other posts about one threex a day</a> and forget our moto!
<strong>"A THREEx extension a day, gets your game on its way!"</strong></p>

<!-- more -->




<iframe width="420" height="315" src="http://learningthreejs.com//www.youtube.com/embed/skjX1Dl7e0Y" frameborder="0" allowfullscreen></iframe>


<h1>Show Don't Tell</h1>

<ul>
<li><a href="http://jeromeetienne.github.io/threex.text/examples/basic.html">examples/basic.html</a>
[<a href="https://github.com/jeromeetienne/threex.text/blob/master/examples/basic.html">view source</a>] :
It shows a 3d text.</li>
<li><a href="http://jeromeetienne.github.io/threex.text/examples/requirejs.html">examples/requirejs.html</a>
[<a href="https://github.com/jeromeetienne/threex.text/blob/master/examples/requirejs.html">view source</a>] :
It show a 3d text and it is all loaded thru require.js</li>
</ul>


<h1>How To Install It</h1>

<p>You can install it via script tag</p>

<p>```html</p>

<script src='threex.text.js'></script>


<p>```</p>

<p>Or you can install with <a href="http://bower.io/">bower</a>, as you wish.</p>

<p><code>bash
bower install threex.text
</code></p>

<h1>How To Use It</h1>

<p>Here is a very basic usage</p>

<p><code>
var mesh    = new THREEx.Text('THREEx')
scene.add(mesh)
</code></p>

<p>Here is another example with more parameters. The options are passed directly
to  <code>THREE.TextGeometry</code>.
See <a href="http://threejs.org/docs/#Reference/Extras.Geometries/TextGeometry">three.js docs</a>
for details.</p>

<p>```
var mesh    = new THREEx.Text('THREEx', {</p>

<pre><code>font        : "droid serif",
weight      : "bold",
size        : 1,
height      : 0.4,
</code></pre>

<p>})
scene.add(mesh)
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perlin Terrain Procedural Generation For Your Game With threex.terrain]]></title>
    <link href="http://learningthreejs.com/blog/2014/05/15/perlin-terrain-procedural-generation-for-your-game-with-threex-dot-terrain/"/>
    <updated>2014-05-15T20:21:00+01:00</updated>
    <id>http://learningthreejs.com/blog/2014/05/15/perlin-terrain-procedural-generation-for-your-game-with-threex-dot-terrain</id>
    <content type="html"><![CDATA[<p><a href='http://jeromeetienne.github.io/threex.terrain/examples/planegeometry.html' target='_blank'><img class="right" src="https://raw.githubusercontent.com/jeromeetienne/threex.terrain/master/examples/images/screenshot-threex-terrain-512x512.jpg" width="250" height="250"></a>
This is post is part of the <a href="/blog/2014/04/22/one-threex-a-day-gets-your-game-on-its-way-a-challenge/">'one threex a day' challenge</a>.
This challenge is to publish every day one game extension for three.js!
One per day, every day and that for 2month!
In this post, we gonna talk about
<a href="http://www.threejsgames.com/extensions/#threex.terrain">threex.terrain</a>.
threex.terrain is a <a href="http://www.threejsgames.com/extensions/">three.js games extension</a> which provides a procedural terrain generated from a simplex noise, the <a href="http://en.wikipedia.org/wiki/Perlin_noise">Perlin noise</a>. As you can see you have different zones that make the terrain more varied, the blue zone represents water, the green one represents trees or grass and the white zone at the mountain top is snow. Imagine your video game character walking on these 3D mountains or flying over them, pretty cool eh? You can take him through river, forest, wind and snow if you want ;)</p>

<p><a href='http://jeromeetienne.github.io/threex.terrain/examples/planegeometry.html' target='_blank'><input type="button" value='Try Threex.terrain Demo Now' /></a></p>

<p>To see the <a href="/blog/categories/threexaday/">other posts about one threex a day</a> and forget our moto!
<strong>"A THREEx extension a day, gets your game on its way!"</strong></p>

<!-- more -->




<iframe width="420" height="315" src="http://learningthreejs.com//www.youtube.com/embed/z_73WDzgBsA" frameborder="0" allowfullscreen></iframe>


<h1>Show Don't Tell</h1>

<ul>
<li><a href="http://jeromeetienne.github.io/threex.terrain/examples/canvas.html">examples/canvas.html</a>
[<a href="https://github.com/jeromeetienne/threex.terrain/blob/master/examples/canvas.html">view source</a>] :
It shows a perlin terrain in a canvas 2d.</li>
<li><a href="http://jeromeetienne.github.io/threex.terrain/examples/planegeometry.html">examples/planegeometry.html</a>
[<a href="https://github.com/jeromeetienne/threex.terrain/blob/master/examples/planegeometry.html">view source</a>] :
It displays the terrain in 3d with three.js.</li>
<li><a href="http://jeromeetienne.github.io/threex.terrain/examples/height.html">examples/height.html</a>
[<a href="https://github.com/jeromeetienne/threex.terrain/blob/master/examples/height.html">view source</a>] :
It show how to test the height in a 3d terrain</li>
<li><a href="http://jeromeetienne.github.io/threex.terrain/examples/minecraft.html">examples/minecraft.html</a>
[<a href="https://github.com/jeromeetienne/threex.terrain/blob/master/examples/minecraft.html">view source</a>] :
It show a minecraft character walking on perlin terrain</li>
</ul>


<h1>How To Install It</h1>

<p>You can install it via script tag</p>

<p>```html</p>

<script src='threex.terrain.js'></script>


<p>```</p>

<p>Or you can install with <a href="http://bower.io/">bower</a>, as you wish.</p>

<p><code>bash
bower install threex.terrain
</code></p>

<h1>How To Use It</h1>

<p>To allocate a heightMap with a width of 100 and a depth of 200, do</p>

<p><code>javascript
var heightMap   = THREEx.Terrain.allocateHeightMap(100, 200)
</code></p>

<p>To generate some heights based on a simplex/perlin noise, do</p>

<p><code>javascript
THREEx.Terrain.simplexHeightMap(heightMap)
</code></p>

<p>If you want to display it in three.js, built a <code>THREE.PlaneGeometry</code> for it</p>

<p><code>javascript
// build the geometry
var geometry    = THREEx.Terrain.heightMapToPlaneGeometry(heightMap)
// init the material
var material    = new THREE.MeshPhongMaterial();
// create the mesh and add it to the scene
var mesh    = new THREE.Mesh( geometry, material );
scene.add( mesh );
</code></p>

<p>To get the ground height of this mesh, use the following</p>

<p><code>javascript
var y = THREEx.Terrain.planeToHeightMapCoords(heightMap, mesh, x, z)
</code></p>

<p>It is possible to enhance the rendering of this heightmap with some vertexColor, and a
smoother shading if you want.</p>

<p>```
// build the geometry
var geometry    = THREEx.Terrain.heightMapToPlaneGeometry(heightMap)
// set the vertexColor in the geometry
THREEx.Terrain.heightMapToVertexColor(heightMap, geometry)
// init the material
var material    = new THREE.MeshPhongMaterial({</p>

<pre><code>shading     : THREE.SmoothShading,
vertexColors    : THREE.VertexColors,
</code></pre>

<p>});
// create the mesh and add it to the scene
var mesh    = new THREE.Mesh( geometry, material );
scene.add( mesh );
```</p>

<p>To get the height with heightMap coordinates, just use</p>

<p><code>javascript
var y   = THREEx.Terrain.heightMapToHeight(heightMap, x, z)
</code></p>

<p>If you want to display the result in a canvas 2d, just do</p>

<p><code>javascript
var canvas  = THREEx.Terrain.heightMapToCanvas(heightMap)
document.body.appendChild(canvas)
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Procedural Generated Pool Balls For Your Three.js Pool Game with threex.poolball]]></title>
    <link href="http://learningthreejs.com/blog/2014/05/14/procedural-generated-pool-balls-for-your-three-dot-js-pool-game-with-threex-dot-poolball/"/>
    <updated>2014-05-14T20:21:00+01:00</updated>
    <id>http://learningthreejs.com/blog/2014/05/14/procedural-generated-pool-balls-for-your-three-dot-js-pool-game-with-threex-dot-poolball</id>
    <content type="html"><![CDATA[<p><a href='http://jeromeetienne.github.io/threex.poolball/examples/demo.html' target='_blank'><img class="right" src="https://raw.githubusercontent.com/jeromeetienne/threex.poolball/master/examples/images/screenshot-threex-poolball-512x512.jpg" width="250" height="250"></a>
This is post is part of the <a href="/blog/2014/04/22/one-threex-a-day-gets-your-game-on-its-way-a-challenge/">'one threex a day' challenge</a>.
This challenge is to publish every day one game extension for three.js!
One per day, every day and that for 2month!
In this post, we gonna talk about
<a href="http://www.threejsgames.com/extensions/#threex.poolball">threex.poolball</a>.
threex.poolball is a <a href="http://www.threejsgames.com/extensions/">three.js games extension</a> which helps you build pool balls. It provides dynamically generated models of pool balls, so no model download needed. It may be fun to play with when you start with three.js, funnier than a plain sphere for sure :) You can use it for your bar games, having  your characters bet when playing pool, or even your <a href="http://jeromeetienne.github.io/marbleTable/">Marble Table</a> games, as I did, adding cool granular sounds when the balls roll.</p>

<p><a href='http://jeromeetienne.github.io/threex.poolball/examples/demo.html' target='_blank'><input type="button" value='Try Threex.poolball Demo Now' /></a></p>

<p>To see the <a href="/blog/categories/threexaday/">other posts about one threex a day</a> and forget our moto!
<strong>"A THREEx extension a day, gets your game on its way!"</strong></p>

<!-- more -->




<iframe width="420" height="315" src="http://learningthreejs.com//www.youtube.com/embed/u_hjrVazLYo" frameborder="0" allowfullscreen></iframe>


<h1>Show Don't Tell</h1>

<ul>
<li><a href="http://jeromeetienne.github.io/threex.poolball/examples/basic.html">examples/basic.html</a>
[<a href="https://github.com/jeromeetienne/threex.poolball/blob/master/examples/basic.html">view source</a>] :
It shows a basic usage of this extension</li>
<li><a href="http://jeromeetienne.github.io/threex.poolball/examples/demo.html">examples/demo.html</a>
[<a href="https://github.com/jeromeetienne/threex.poolball/blob/master/examples/demo.html">view source</a>] :
It shows multiple pool balls setup like on a pool table :)</li>
</ul>


<h1>How To Install It</h1>

<p>You can install it via script tag</p>

<p>```html</p>

<script src='threex.poolball.js'></script>


<p>```</p>

<p>Or you can install with <a href="http://bower.io/">bower</a>, as you wish.</p>

<p><code>bash
bower install threex.poolball
</code></p>

<h1>How To Use It</h1>

<p>Here is the default usages</p>

<p><code>
var mesh    = THREEx.createPoolBall();
scene.add(mesh)
</code></p>

<p>this is with custom arguments</p>

<p>```
var mesh    = THREEx.createPoolBall({</p>

<pre><code>ballDesc    : '0',  // the text which gonna be written on the ball
stripped    : true, // true if the ball must be stripped, false otherwise
textureW    : 512   // the width/height of the created texture for this ball
</code></pre>

<p>});
scene.add(mesh)
```</p>

<p>Some ball description are already done.</p>

<ul>
<li><code>cue</code> will return an unstripped white ball</li>
<li><code>black</code> will return an unstripped black ball</li>
<li><code>1</code> to <code>9</code> will assign the official colors for <a href="http://en.wikipedia.org/wiki/Nine-ball">nine-ball</a> pool</li>
</ul>

]]></content>
  </entry>
  
</feed>
